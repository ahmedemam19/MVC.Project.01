
@model IEnumerable<Employee>

@{
    ViewData["Title"] = "Index";

    // string ViewDataMessage = ViewData["Message"] as string; // Enforce type safety -> requires type Conversion

    // string ViewBagMessage = ViewBag.Message; // Compiler Cant Enforce typr safety -> dont require type Conversion

}

@if(!string.IsNullOrEmpty(TempData["Message"] as string))
{
    <div class="alert alert-primary">
        @TempData["Message"]
    </div>
}



@* <div class="alert alert-warning">
    @ViewData["Message"]
</div> *@

@* <div class="alert alert-success">
    @ViewBag.Message;
</div> *@




<h1>All Employees</h1>

<br />
<br />

<a asp-controller="Employee" asp-action="Create" class="btn btn-primary mb-3">Create New Employee</a>

<br />

@if(Model.Count() > 0)
{
    <table class="table table-striped table-hover table-bordered">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(e => e.Name)</th>
                <th>@Html.DisplayNameFor(e => e.Age)</th>
                <th>@Html.DisplayNameFor(e => e.Address)</th>
                <th>@Html.DisplayNameFor(e => e.Salary)</th>
                <th scope="col">@Html.DisplayNameFor(e => e.Department)</th>
                <th>@Html.DisplayNameFor(e => e.IsActive)</th>
                <th>@Html.DisplayNameFor(e => e.Email)</th>
                @* <th>@Html.DisplayNameFor(e => e.PhoneNumber)</th> *@
                @* <th>@Html.DisplayNameFor(e => e.HiringDate)</th> *@
                <th>@Html.DisplayNameFor(e => e.Gender)</th>
                @* <th>@Html.DisplayNameFor(e => e.EmpType)</th> *@
                <th>@Html.DisplayNameFor(e => e.CreationDate)</th>
                <th>@Html.DisplayNameFor(e => e.IsDeleted)</th>
                <th>Details</th>
                <th>Update</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var employee in Model)
            {
                <tr>
                    <td>@employee.Name</td>
                    <td>@employee.Age</td>
                    <td>@employee.Address</td>
                    <td>@Html.DisplayFor(e => employee.Department.Name)</td>
                    <td>@Html.DisplayFor(e => employee.Salary)</td>
                    <td>@Html.DisplayFor(e => employee.IsActive)</td>
                    <td>@Html.DisplayFor(e => employee.Email)</td>
                    <td>@employee.Gender</td>
                    <td>@employee.CreationDate</td>
                    <td>@employee.IsDeleted</td>


                    <partial name="_ButtonsPartial" model="@employee.Id" />
                    @* For rendering the buttons in _ButtonsPartial  *@
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="p-3 mt-4 alert-warning">
        <h4>There are no Employees <i class="fa-solid fa-circle-exclamation"></i></h4>
    </div>
}

